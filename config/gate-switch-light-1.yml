---

substitutions:
  myname: gate-switch-light-1
  location: "gate"

esphome:
  name: ${myname}

esp8266:
  board: esp8285
  # unlike switches for other lights, keep state in EEPROM. this switch does
  # not have an external switch that turns on or off the esphome device.
  restore_from_flash: yes

logger:
  level: debug

api:
  password: !secret api_password

debug:
  update_interval: 5s

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

globals:
  - id: buf
    type: char[512]
    restore_value: no
    initial_value: ""

http_request:
  useragent: esphome/${myname}
  timeout: 10s

text_sensor:
  - platform: wifi_info
    ip_address:
      name: ESP IP Address ${myname}
    ssid:
      name: ESP Connected SSID ${myname}
    bssid:
      name: ESP Connected BSSID ${myname}
    mac_address:
      name: ESP Mac Wifi Address ${myname}
    scan_results:
      name: ESP Latest Scan Results ${myname}

sensor:
  - platform: wifi_signal
    name: "WiFi Signal Sensor ${myname}"
    update_interval: 60s

  - platform: uptime
    name: Uptime Sensor ${myname}

binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode:
        input: true
        pullup: true
      inverted: true
    name: "Button ${myname}"
    on_press:
      - switch.toggle: relay

switch:
  - platform: gpio
    name: "Relay ${myname}"
    pin: GPIO12
    # keep state. if no state is found in EEPROM, defaults to off. see also
    # restore_from_flash.
    restore_mode: RESTORE_DEFAULT_OFF
    id: relay

status_led:
  pin:
    number: GPIO13
    inverted: yes
